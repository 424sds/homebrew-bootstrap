#!/usr/bin/env ruby
# Generates and installs a project nginx configuration using erb.
require "erb"
require "pathname"

root_configuration = ARGV.delete "--root"
if root_configuration
  http_port = 80
  https_port = 443
else
  http_port = 8080
  https_port = 8443
end

name = ARGV.shift
root = ARGV.shift || "."
input = ARGV.shift || "config/dev/nginx.conf.erb"

if !name || !root || !input
  abort "Usage: brew generate-nginx-conf [--root] <project_name> <project_root_path> <nginx.conf.erb>"
end

unless input.end_with? ".erb"
  abort "Error: #{input} is not a .erb file!"
end

root = File.expand_path root
input = File.expand_path input

data = IO.read input
conf = ERB.new(data).result
output = input.sub(/.erb$/, "")
output.sub!(/.conf$/, ".root.conf") if root_configuration
IO.write output, conf

exit if ENV["BOXEN_HOME"]
exit if root_configuration

/access_log (?<log>.+);/ =~ conf
if log
  log = Pathname(log)
  log.dirname.mkpath
  FileUtils.touch log unless log.exist?
end

homebrew_prefix = `brew --prefix 2>/dev/null`.chomp
exit if !homebrew_prefix || homebrew_prefix.empty?

server = "#{homebrew_prefix}/etc/nginx/servers/#{name}"
system "ln -sf '#{File.absolute_path(output)}' '#{server}'"
abort "Error: failed to symlink #{output} to #{server}!" unless $?.success?

system "brew prune"
system "brew services restart nginx"
abort "Error: failed to restart nginx!" unless $?.success?
